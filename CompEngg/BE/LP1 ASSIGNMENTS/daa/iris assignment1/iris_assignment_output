> df = read.csv("iris.csv")
> print("SUMMARY AND STRUCTURE")
[1] "SUMMARY AND STRUCTURE"
> summary(df)
  Sepal.Length    Sepal.Width     Petal.Length    Petal.Width               Species  
 Min.   :4.300   Min.   :2.000   Min.   :1.000   Min.   :0.100   Iris-setosa    :50  
 1st Qu.:5.100   1st Qu.:2.800   1st Qu.:1.600   1st Qu.:0.300   Iris-versicolor:50  
 Median :5.800   Median :3.000   Median :4.350   Median :1.300   Iris-virginica :50  
 Mean   :5.843   Mean   :3.054   Mean   :3.759   Mean   :1.199                       
 3rd Qu.:6.400   3rd Qu.:3.300   3rd Qu.:5.100   3rd Qu.:1.800                       
 Max.   :7.900   Max.   :4.400   Max.   :6.900   Max.   :2.500                       
> str(df)  #structure with class
'data.frame':	150 obs. of  5 variables:
 $ Sepal.Length: num  5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ...
 $ Sepal.Width : num  3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ...
 $ Petal.Length: num  1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 ...
 $ Petal.Width : num  0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 ...
 $ Species     : Factor w/ 3 levels "Iris-setosa",..: 1 1 1 1 1 1 1 1 1 1 ...
> print("MINIMUM VALUE")
[1] "MINIMUM VALUE"
> print(sapply(df, function(x) min(as.numeric(x))))
Sepal.Length  Sepal.Width Petal.Length  Petal.Width      Species 
         4.3          2.0          1.0          0.1          1.0 
> print("MAXIMUM VALUE")
[1] "MAXIMUM VALUE"
> print(sapply(df, function(x) max(as.numeric(x))))
Sepal.Length  Sepal.Width Petal.Length  Petal.Width      Species 
         7.9          4.4          6.9          2.5          3.0 
> print("AVERAGE VALUE")
[1] "AVERAGE VALUE"
> print(sapply(df, function(x) mean(as.numeric(x))))
Sepal.Length  Sepal.Width Petal.Length  Petal.Width      Species 
    5.843333     3.054000     3.758667     1.198667     2.000000 
> print("RANGE OF VALUES")
[1] "RANGE OF VALUES"
> print(sapply(df, function(x) range(as.numeric(x))))
     Sepal.Length Sepal.Width Petal.Length Petal.Width Species
[1,]          4.3         2.0          1.0         0.1       1
[2,]          7.9         4.4          6.9         2.5       3
> print("STANDARD DEVIATIONS")
[1] "STANDARD DEVIATIONS"
> print(sapply(df, function(x) sd(as.numeric(x))))
Sepal.Length  Sepal.Width Petal.Length  Petal.Width      Species 
   0.8280661    0.4335943    1.7644204    0.7631607    0.8192319 
> print("VARIANCE")
[1] "VARIANCE"
> print(sapply(df, function(x) var(as.numeric(x))))
Sepal.Length  Sepal.Width Petal.Length  Petal.Width      Species 
   0.6856935    0.1880040    3.1131794    0.5824143    0.6711409 

> print("PERCENTILES")
[1] "PERCENTILES"
> num = c(1,2,3,4)
> for (n in num) {
+   cat("Column", n , "\n")
+   print(quantile(df[,n], probs = c(0, 0.25, 0.5, 0.75, 1)))
+ }
Column 1 
  0%  25%  50%  75% 100% 
 4.3  5.1  5.8  6.4  7.9 
Column 2 
  0%  25%  50%  75% 100% 
 2.0  2.8  3.0  3.3  4.4 
Column 3 
  0%  25%  50%  75% 100% 
1.00 1.60 4.35 5.10 6.90 
Column 4 
  0%  25%  50%  75% 100% 
 0.1  0.3  1.3  1.8  2.5 
> for (n in num) {
+   hist(df[,n], main = "Histogram")
+   Sys.sleep(5)
+ }
> boxplot(df[,1:4], main = "Boxplot of Iris")
